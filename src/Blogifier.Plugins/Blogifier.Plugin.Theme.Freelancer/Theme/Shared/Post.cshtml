@using Blogifier.Shared.Resources
@using Blogifier.Shared
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@inject IStringLocalizer<Resource> _localizer
@inject IOptions<FreelancerThemeSettings> _options
@{
    Layout = "layouts/_main.cshtml";
    PostModel postModel = (PostModel)Model;
    var post = postModel.Post;
    string cover = postModel.Post.Cover;
    var catUrl = Url.Content("~/categories");
    var settings = _options.Value;
}

@*
    FREELANCER doesn't include a template for blog pages,
    it is intended to be used as single page.
    This is a basic post template to be used as base for more complete implementations

    The entire feature needs a proper design.
*@
<div class="page-container">
    <section class="page-section">
        <div class="container post">
            <!-- Portfolio Section Heading-->
            <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">@post.Title</h2>
            <!-- Icon Divider-->
            <div class="divider-custom">
                <div class="divider-custom-line"></div>
                <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                <div class="divider-custom-line"></div>
            </div>

            <figure class="post-cover rounded">
                <img class="img-fluid mb-5 post-cover-img rounded" src="~/@post.Cover" alt="@post.Title" aria-hidden="true" />
            </figure>

            <header class="post-header post-container">

                <div class="post-meta d-flex align-items-center">
                    @if (settings.ShowPostInfo)
                    {
                        <div class="post-meta-item post-meta-author">
                            <img class="post-meta-author-img d-none d-md-block" width="32" height="32" src="@post.Author.Avatar" alt="@post.Author.DisplayName" aria-hidden="true" />
                            <div class="post-meta-author-details">
                                <span class="post-meta-label">@_localizer["author"]</span>
                                <a class="post-meta-author-name" href="#">@post.Author.DisplayName</a>
                            </div>
                        </div>
                        <div class="post-meta-item post-meta-date">
                            <span class="post-meta-label">@_localizer["published"]</span>
                            <time class="post-meta-date-time">@post.Published.ToFriendlyShortDateString()</time>
                        </div>
                        @if (post.Categories != null && post.Categories.Count > 0)
                        {
                            <div class="post-meta-item post-meta-cats">
                                <span class="post-meta-label">@_localizer["categories"]</span>
                                <ul class="post-meta-cats-list d-flex">
                                    @foreach (var cat in post.Categories)
                                    {
                                        <li class="post-meta-cats-item">
                                            <a class="post-meta-cats-link" href="@catUrl/@cat.Content">@cat.Content</a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    }

                    <button class="post-meta-btn ms-auto" type="button" data-bs-toggle="modal" data-bs-target="#shareModal" aria-label="@_localizer["share"]">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-share" viewBox="0 0 16 16">
                            <path d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z" />
                        </svg>
                    </button>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a class="post-meta-btn ms-2" href="~/admin/editor/@post.Slug" role="button" aria-label="@_localizer["edit-post"]">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                            </svg>
                        </a>
                    }
                </div>
            </header>

            <section class="post-content post-container">
                @Html.Raw(post.Content)
            </section>

            <footer class="post-footer post-container">
                <!--
                    TODO:
                    Custom fields:
                    - post author on or off (default)
                    - post comments on or off (default)
                -->
                @if (settings.ShowPostAuthorFooter)
                {
                    <partial name="post/author.cshtml" />
                }

                <partial name="post/comments.cshtml" />
            </footer>

        </div>
    </section>
</div>
